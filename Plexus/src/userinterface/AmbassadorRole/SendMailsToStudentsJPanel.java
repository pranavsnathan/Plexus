/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AmbassadorRole;

import Business.Enterprise.Enterprise;
import Business.Newbie.Newbie;
import Business.Organization.NewbieOrganization;
import Business.Organization.Organization;
import java.util.ArrayList;
import java.util.Properties;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.Message;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.data.category.DefaultCategoryDataset;



/**
 *
 * @author Hi
 */
public class SendMailsToStudentsJPanel extends javax.swing.JPanel {
    
     private Enterprise enterprise;
    private Organization org;

    /**
     * Creates new form SendMailsToStudents
     */
    public SendMailsToStudentsJPanel(Enterprise enterprise, Organization organization) {
        initComponents();
        this.enterprise=enterprise;
        this.org=organization;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SendBtn = new javax.swing.JButton();
        MessageTF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        BodyTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SendBtn.setText("Send");
        SendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendBtnActionPerformed(evt);
            }
        });
        add(SendBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 60, 120, -1));
        add(MessageTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 140, 150, -1));

        jLabel1.setText("Message Content:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, 110, -1));
        add(BodyTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 210, 140, -1));

        jLabel2.setText("Body Content");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 220, -1, -1));
    }// </editor-fold>//GEN-END:initComponents
public void emailFunction(){
    
        Properties prop = new Properties();
        prop.put("mail.smtp.user","tsumanth93@gmail.com");
        prop.put("mail.smtp.host", "smtp.gmail.com");
        prop.put("mail.smtp.port", "465");
        
        prop.put("mail.smtp.starttls.enable","true");
        prop.put("mail.smtp.debug", "true");
        
        prop.put("mail.smtp.auth", "true");
        prop.put("mail.smtp.socketFactory.port","465"); //its mentioned in java site for SSL port is 465 for ssl
        prop.put("mail.smtp.socketFactory.Class", "javax.net.ssl.SSLSocketFactory");
        
        
        
        Session session = Session.getDefaultInstance(prop,
                new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication(){
                return new PasswordAuthentication("tsumanth93@gmail.com", "Ts120293");
                }
                }
                );
           try{
                Message mess = new MimeMessage(session);
                mess.setFrom(new InternetAddress("tsumanth93@gmail.com"));
                for(Newbie newbie : enterprise.getNds().getNewbieDetailsList())
                {
                    if(newbie.getEmailID()!=null){
                        
                  
                mess.setRecipients(Message.RecipientType.TO, InternetAddress.parse(newbie.getEmailID()));
                mess.setSubject("Email Testing From Ecoguard");
                 MimeBodyPart msgBodyPart = new MimeBodyPart();
                  msgBodyPart.setText(MessageTF.getText());
                Multipart multiPart = new MimeMultipart();
                multiPart.addBodyPart(msgBodyPart);
                 mess.setContent(multiPart);
                  }
                }
                
               // mess.setText("Test mail from Ecoguard");
                //Transport.send(mess);
                
                //Attachment
                //MimeBodyPart msgBodyPart = new MimeBodyPart();
                //MimeBodyPart msgbodyPart2 = new MimeBodyPart();
              
                
                //convertToPdf();
               /* String filepath = "C:\\Users\\EcoGuard.pdf";
                MimeBodyPart msgBodyPart2 = new MimeBodyPart();
                DataSource src = new FileDataSource(filepath);
                msgBodyPart2.setDataHandler(new DataHandler(src));
                msgBodyPart2.setFileName("Ecoguard Analysis.pdf");*/
               
                
               // multiPart.addBodyPart(msgBodyPart2);

               

                Transport transport = session.getTransport("smtps");
                transport.connect("smtp.gmail.com", Integer.valueOf("465"), "tsumanth93@gmail.com", "Ts120293");
                transport.sendMessage(mess, mess.getAllRecipients());
                transport.close();
                
                
                JOptionPane.showMessageDialog(null, "Mail Sent");
           }catch(Exception e){
               JOptionPane.showMessageDialog(null, e);
           }
    }
    
    private void chartBtnActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:

        Newbie newbie = null;

        DefaultCategoryDataset dcd = new DefaultCategoryDataset();

        ArrayList<String> feelingsList = new ArrayList<>();
        feelingsList.add("happy");
        feelingsList.add("Nervous");
        feelingsList.add("Depressed");
        feelingsList.add("Confused");

        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof NewbieOrganization) {
                org = organization;
            }
        }
        for(String feelings: feelingsList){
            int feelingsCount=0;
        for (Newbie n : org.getNds().getNewbieDetailsList()) {
           if(n.getFeeling().equalsIgnoreCase(feelings)){
               feelingsCount++;
                dcd.addValue(feelingsCount, "Student", n.getFeeling());
           }
                
            }
        }

        /*for (Area area : network.getAreaList()) {
           int totalSeverityPoints = 0;
           for (WorkRequest workRequest : policeOrganization.getWorkQueue().getWorkRequestList()) {
               if (area.equals(((CitizenToPoliceWorkrequest) workRequest).getArea())) {
                   if (workRequest.getStatus().equalsIgnoreCase("PROCESSED")) {
                       totalSeverityPoints = totalSeverityPoints + ((CitizenToPoliceWorkrequest) workRequest).getSeverityPoints();8/
                       dcd.addValue(100, "Student", area.getName());
                   }
               }
           }

       }*/
        //dcd.addValue(100, "Student", );
        JFreeChart chart = ChartFactory.createBarChart("Bar Chart", "Student", "Feeling", dcd);
        CategoryPlot plot = chart.getCategoryPlot();

        ChartFrame chrt = new ChartFrame("Trail", chart);
        chrt.setVisible(true);
        chrt.setSize(500, 400);


    }                                        

    private void SendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendBtnActionPerformed
        // TODO add your handling code here:
        
          emailFunction();
      
        JOptionPane.showMessageDialog(null, "Email sent ");
    }//GEN-LAST:event_SendBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BodyTF;
    private javax.swing.JTextField MessageTF;
    private javax.swing.JButton SendBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
